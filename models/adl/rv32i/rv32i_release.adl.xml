<?xml version="1.0" encoding="UTF-8" ?>

<data>
<cores>
<core name="RV32I">
<licenseText>
<str> Copyright 2024 NXP
SPDX-License-Identifier: BSD-2-Clause </str>
</licenseText>
<doc>
<str><![CDATA[
The base Risc-V 32-bit integer instruction set. Based upon version 2.0.


]]></str>
</doc>
<bit_endianness>
<str>little</str>
</bit_endianness>
<RaMask>
<initial>
<str>0xffffffff</str>
</initial>
<constant>
<true />
</constant>
</RaMask>
<EaMask>
<initial>
<str>0xffffffff</str>
</initial>
<constant>
<true />
</constant>
</EaMask>
<regs>
<register name="NIA">
<doc>
<str><![CDATA[
    Next instruction address.
    
]]></str>
</doc>
<width>
<int>32</int>
</width>
<attributes>
<attribute name="nia">
<str></str>
</attribute>
<attribute name="debug">
<int>1</int>
</attribute>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<reset>
<str>0</str>
</reset>
<shared>
<int>0</int>
</shared>
</register>
<register name="PC">
<doc>
<str><![CDATA[
    Current instruction address.
    
]]></str>
</doc>
<width>
<int>32</int>
</width>
<attributes>
<attribute name="cia">
<str></str>
</attribute>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<reset>
<str>0</str>
</reset>
<shared>
<int>0</int>
</shared>
</register>
</regs>
<regfiles>
<regfile name="GPR">
<doc>
<str><![CDATA[
      The complete general-purpose register file. r0 always reads as 0.
    
]]></str>
</doc>
<width>
<int>32</int>
</width>
<attributes>
<attribute name="debug">
<int>0</int>
</attribute>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<size>
<int>32</int>
</size>
<prefix>
<str>x</str>
</prefix>
<shared>
<int>0</int>
</shared>
<read>
<action>
<str><![CDATA[
{
    return ( index == 0 ) ? 0 : ThisReg ( index ) ;
}
]]></str>
</action>
</read>
<write>
<action>
<str><![CDATA[
{
    if ( index != 0 ) {
        ThisReg ( index ) = x ;
    }
}
]]></str>
</action>
</write>
<calling_convention>
<option name="X0">
<str>Hard_wired_zero</str>
</option>
<option name="X1">
<str>Return_address</str>
</option>
<option name="X2">
<str>Stack_pointer</str>
</option>
<option name="X3">
<str>Global_pointer</str>
</option>
<option name="X4">
<str>Thread_pointer</str>
</option>
<option name="X5">
<str>Temporary</str>
</option>
<option name="X5">
<str>Alternate_link_register</str>
</option>
<option name="X6">
<str>Temporary</str>
</option>
<option name="X7">
<str>Temporary</str>
</option>
<option name="X8">
<str>Saved_register</str>
</option>
<option name="X8">
<str>Frame_pointer</str>
</option>
<option name="X9">
<str>Saved_register</str>
</option>
<option name="X10">
<str>Function_arguments</str>
</option>
<option name="X10">
<str>Return_values</str>
</option>
<option name="X11">
<str>Function_arguments</str>
</option>
<option name="X11">
<str>Return_values</str>
</option>
<option name="X12">
<str>Function_arguments</str>
</option>
<option name="X13">
<str>Function_arguments</str>
</option>
<option name="X14">
<str>Function_arguments</str>
</option>
<option name="X15">
<str>Function_arguments</str>
</option>
<option name="X16">
<str>Function_arguments</str>
</option>
<option name="X17">
<str>Function_arguments</str>
</option>
<option name="X18">
<str>Saved_register</str>
</option>
<option name="X19">
<str>Saved_register</str>
</option>
<option name="X20">
<str>Saved_register</str>
</option>
<option name="X21">
<str>Saved_register</str>
</option>
<option name="X22">
<str>Saved_register</str>
</option>
<option name="X23">
<str>Saved_register</str>
</option>
<option name="X24">
<str>Saved_register</str>
</option>
<option name="X25">
<str>Saved_register</str>
</option>
<option name="X26">
<str>Saved_register</str>
</option>
<option name="X27">
<str>Saved_register</str>
</option>
<option name="X28">
<str>Temporary</str>
</option>
<option name="X29">
<str>Temporary</str>
</option>
<option name="X30">
<str>Temporary</str>
</option>
<option name="X31">
<str>Temporary</str>
</option>
</calling_convention>
</regfile>
</regfiles>
<relocations>
<reloc name="R_RISCV_32">
<abbrev>
<str>a32</str>
</abbrev>
<field_width>
<int>32</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>2</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_64">
<abbrev>
<str>a64</str>
</abbrev>
<field_width>
<int>64</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>1</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_GPREL_I">
<abbrev>
<str></str>
</abbrev>
<field_width>
<int>12</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>47</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_HI20">
<abbrev>
<str>hi</str>
</abbrev>
<field_width>
<int>20</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>26</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_LO12_I">
<abbrev>
<str>lo</str>
</abbrev>
<field_width>
<int>12</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>27</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_NONE">
<abbrev>
<str>none</str>
</abbrev>
<field_width>
<int>0</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>0</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_PCREL_HI20">
<abbrev>
<str>pcrel_hi</str>
</abbrev>
<field_width>
<int>20</int>
</field_width>
<pcrel>
<true />
</pcrel>
<value>
<int>23</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_PCREL_LO12_I">
<abbrev>
<str>pcrel_lo</str>
</abbrev>
<field_width>
<int>12</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>24</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_RELATIVE">
<abbrev>
<str>arel</str>
</abbrev>
<field_width>
<int>32</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>3</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_RELAX">
<abbrev>
<str></str>
</abbrev>
<field_width>
<int>0</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>51</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_TPREL_ADD">
<abbrev>
<str>tprel_add</str>
</abbrev>
<field_width>
<int>32</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>32</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_TPREL_HI20">
<abbrev>
<str>tprel_hi</str>
</abbrev>
<field_width>
<int>20</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>29</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_TPREL_I">
<abbrev>
<str></str>
</abbrev>
<field_width>
<int>12</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>49</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_RISCV_TPREL_LO12_I">
<abbrev>
<str>tprel_lo</str>
</abbrev>
<field_width>
<int>12</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>30</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
</relocations>
<instrfields>
<instrfield name="Is3">
<doc>
<str><![CDATA[
    Five-bit immediate field for specifying a field width.
    
]]></str>
</doc>
<bits>
<range>
<int>29</int>
<int>25</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x3e000000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="Is4">
<doc>
<str><![CDATA[
    Five-bit immediate field for specifying a field width.
    
]]></str>
</doc>
<bits>
<range>
<int>24</int>
<int>20</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x1f00000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="csr">
<doc>
<str><![CDATA[
    12-bit field for specifying a control/status register.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>20</int>
</range>
</bits>
<width>
<int>12</int>
</width>
<size>
<int>12</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfff00000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="fence_prod">
<doc>
<str><![CDATA[
    4-bit field for defining the producer in a fence operation.
    
]]></str>
</doc>
<bits>
<range>
<int>27</int>
<int>24</int>
</range>
</bits>
<width>
<int>4</int>
</width>
<size>
<int>4</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xf000000</str>
</mask>
<enumerated>
<option name="0">
<str>reserved</str>
</option>
<option name="1">
<str>w</str>
</option>
<option name="2">
<str>r</str>
</option>
<option name="3">
<str>rw</str>
</option>
<option name="4">
<str>o</str>
</option>
<option name="5">
<str>ow</str>
</option>
<option name="6">
<str>or</str>
</option>
<option name="7">
<str>orw</str>
</option>
<option name="8">
<str>i</str>
</option>
<option name="9">
<str>iw</str>
</option>
<option name="10">
<str>ir</str>
</option>
<option name="11">
<str>irw</str>
</option>
<option name="12">
<str>io</str>
</option>
<option name="13">
<str>iow</str>
</option>
<option name="14">
<str>ior</str>
</option>
<option name="15">
<str>iorw</str>
</option>
</enumerated>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="fence_succ">
<doc>
<str><![CDATA[
    4-bit field for defining the successor in a fence operation.
    
]]></str>
</doc>
<bits>
<range>
<int>23</int>
<int>20</int>
</range>
</bits>
<width>
<int>4</int>
</width>
<size>
<int>4</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xf00000</str>
</mask>
<enumerated>
<option name="0">
<str>reserved</str>
</option>
<option name="1">
<str>w</str>
</option>
<option name="2">
<str>r</str>
</option>
<option name="3">
<str>rw</str>
</option>
<option name="4">
<str>o</str>
</option>
<option name="5">
<str>ow</str>
</option>
<option name="6">
<str>or</str>
</option>
<option name="7">
<str>orw</str>
</option>
<option name="8">
<str>i</str>
</option>
<option name="9">
<str>iw</str>
</option>
<option name="10">
<str>ir</str>
</option>
<option name="11">
<str>irw</str>
</option>
<option name="12">
<str>io</str>
</option>
<option name="13">
<str>iow</str>
</option>
<option name="14">
<str>ior</str>
</option>
<option name="15">
<str>iorw</str>
</option>
</enumerated>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="funct12">
<doc>
<str><![CDATA[
    12-bit opcode for environment access functions.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>20</int>
</range>
</bits>
<width>
<int>12</int>
</width>
<size>
<int>12</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfff00000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="funct2">
<doc>
<str><![CDATA[
    Two-bit opcode field for bit manipulation instructions.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>30</int>
</range>
</bits>
<width>
<int>2</int>
</width>
<size>
<int>2</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xc0000000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="funct3">
<doc>
<str><![CDATA[
    Secondary opcode (function) field.
    
]]></str>
</doc>
<bits>
<range>
<int>14</int>
<int>12</int>
</range>
</bits>
<width>
<int>3</int>
</width>
<size>
<int>3</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x7000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="funct5">
<doc>
<str><![CDATA[
    Tertiary opcode field for atomic operations.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>27</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xf8000000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="funct7">
<doc>
<str><![CDATA[
    Tertiary opcode field.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>25</int>
</range>
</bits>
<width>
<int>7</int>
</width>
<size>
<int>7</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfe000000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="funct7_shift">
<doc>
<str><![CDATA[
    Tertiary opcode field specifically used by shifts.

    This is defined separately because its size is modified for RV64I.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>25</int>
</range>
</bits>
<width>
<int>7</int>
</width>
<size>
<int>7</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfe000000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="imm_64">
<doc>
<str><![CDATA[
    Assembler-only instruction field for loading large constants.

    We allow in the largest constants, but also allow signed numbers.
    
]]></str>
</doc>
<pseudo>
<true />
</pseudo>
<width>
<int>64</int>
</width>
<size>
<int>64</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x0</str>
</mask>
<type>
<str>imm</str>
</type>
<signed>
<str>true</str>
</signed>
<unsigned_upper_bound>
<true />
</unsigned_upper_bound>
</instrfield>
<instrfield name="imm_add_tprel">
<doc>
<str><![CDATA[
    Dummy instruction field used by the add operation for thread local storage.
    
]]></str>
</doc>
<pseudo>
<true />
</pseudo>
<width>
<int>32</int>
</width>
<size>
<int>32</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x0</str>
</mask>
<type>
<str>imm</str>
</type>
<reloc>
<str>R_RISCV_TPREL_ADD</str>
</reloc>
</instrfield>
<instrfield name="imm_i">
<doc>
<str><![CDATA[
    Signed 12-bit immediate for I-type instructions.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>20</int>
</range>
</bits>
<width>
<int>12</int>
</width>
<size>
<int>12</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfff00000</str>
</mask>
<display>
<str>dec</str>
</display>
<type>
<str>imm</str>
</type>
<signed>
<str>true</str>
</signed>
<reloc>
<str>R_RISCV_GPREL_I</str>
</reloc>
</instrfield>
<instrfield name="imm_s">
<doc>
<str><![CDATA[
    Signed 12-bit immediate for S-type instructions.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>25</int>
</range>
<range>
<int>11</int>
<int>7</int>
</range>
</bits>
<width>
<int>12</int>
</width>
<size>
<int>12</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfe000f80</str>
</mask>
<display>
<str>dec</str>
</display>
<type>
<str>imm</str>
</type>
<signed>
<str>true</str>
</signed>
</instrfield>
<instrfield name="imm_sb">
<doc>
<str><![CDATA[
    Signed 12-bit immediate for SB-type instructions.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>31</int>
</range>
<range>
<int>7</int>
<int>7</int>
</range>
<range>
<int>30</int>
<int>25</int>
</range>
<range>
<int>11</int>
<int>8</int>
</range>
</bits>
<width>
<int>12</int>
</width>
<size>
<int>12</int>
</size>
<shift>
<int>1</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfe000f80</str>
</mask>
<addr>
<str>pc</str>
</addr>
<display>
<str>dec</str>
</display>
<type>
<str>imm</str>
</type>
<signed>
<str>true</str>
</signed>
</instrfield>
<instrfield name="imm_u">
<doc>
<str><![CDATA[
    20-bit immediate for U-type instructions.

    The resulting register is sign-extended, but the field is treated as an
    unsigned value from a range-checking point of view.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>12</int>
</range>
</bits>
<width>
<int>20</int>
</width>
<size>
<int>20</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfffff000</str>
</mask>
<display>
<str>hex</str>
</display>
<type>
<str>imm</str>
</type>
<reloc>
<str>R_RISCV_HI20</str>
</reloc>
</instrfield>
<instrfield name="imm_u_pc">
<doc>
<str><![CDATA[
    Signed 20-bit immediate PC-relative field for U-type instructions.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>12</int>
</range>
</bits>
<width>
<int>20</int>
</width>
<size>
<int>20</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfffff000</str>
</mask>
<display>
<str>hex</str>
</display>
<type>
<str>imm</str>
</type>
<reloc>
<str>R_RISCV_PCREL_HI20</str>
</reloc>
</instrfield>
<instrfield name="imm_uj">
<doc>
<str><![CDATA[
    Signed 20-bit immediate for UJ-type instructions.
    
]]></str>
</doc>
<bits>
<range>
<int>31</int>
<int>31</int>
</range>
<range>
<int>19</int>
<int>12</int>
</range>
<range>
<int>20</int>
<int>20</int>
</range>
<range>
<int>30</int>
<int>21</int>
</range>
</bits>
<width>
<int>20</int>
</width>
<size>
<int>20</int>
</size>
<shift>
<int>1</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xfffff000</str>
</mask>
<addr>
<str>pc</str>
</addr>
<type>
<str>imm</str>
</type>
<signed>
<str>true</str>
</signed>
</instrfield>
<instrfield name="opcode">
<doc>
<str><![CDATA[
    Primary opcode field.
    
]]></str>
</doc>
<bits>
<range>
<int>6</int>
<int>0</int>
</range>
</bits>
<width>
<int>7</int>
</width>
<size>
<int>7</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x7f</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="rd">
<doc>
<str><![CDATA[
    Destination/target register field.
    
]]></str>
</doc>
<bits>
<range>
<int>11</int>
<int>7</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xf80</str>
</mask>
<enumerated>
<option name="0">
<str>zero</str>
</option>
<option name="0">
<str>x0</str>
</option>
<option name="1">
<str>ra</str>
</option>
<option name="1">
<str>x1</str>
</option>
<option name="2">
<str>sp</str>
</option>
<option name="2">
<str>x2</str>
</option>
<option name="3">
<str>gp</str>
</option>
<option name="3">
<str>x3</str>
</option>
<option name="4">
<str>tp</str>
</option>
<option name="4">
<str>x4</str>
</option>
<option name="5">
<str>t0</str>
</option>
<option name="5">
<str>x5</str>
</option>
<option name="6">
<str>t1</str>
</option>
<option name="6">
<str>x6</str>
</option>
<option name="7">
<str>t2</str>
</option>
<option name="7">
<str>x7</str>
</option>
<option name="8">
<str>s0</str>
</option>
<option name="8">
<str>x8</str>
</option>
<option name="8">
<str>fp</str>
</option>
<option name="9">
<str>s1</str>
</option>
<option name="9">
<str>x9</str>
</option>
<option name="10">
<str>a0</str>
</option>
<option name="10">
<str>x10</str>
</option>
<option name="11">
<str>a1</str>
</option>
<option name="11">
<str>x11</str>
</option>
<option name="12">
<str>a2</str>
</option>
<option name="12">
<str>x12</str>
</option>
<option name="13">
<str>a3</str>
</option>
<option name="13">
<str>x13</str>
</option>
<option name="14">
<str>a4</str>
</option>
<option name="14">
<str>x14</str>
</option>
<option name="15">
<str>a5</str>
</option>
<option name="15">
<str>x15</str>
</option>
<option name="16">
<str>a6</str>
</option>
<option name="16">
<str>x16</str>
</option>
<option name="17">
<str>a7</str>
</option>
<option name="17">
<str>x17</str>
</option>
<option name="18">
<str>s2</str>
</option>
<option name="18">
<str>x18</str>
</option>
<option name="19">
<str>s3</str>
</option>
<option name="19">
<str>x19</str>
</option>
<option name="20">
<str>s4</str>
</option>
<option name="20">
<str>x20</str>
</option>
<option name="21">
<str>s5</str>
</option>
<option name="21">
<str>x21</str>
</option>
<option name="22">
<str>s6</str>
</option>
<option name="22">
<str>x22</str>
</option>
<option name="23">
<str>s7</str>
</option>
<option name="23">
<str>x23</str>
</option>
<option name="24">
<str>s8</str>
</option>
<option name="24">
<str>x24</str>
</option>
<option name="25">
<str>s9</str>
</option>
<option name="25">
<str>x25</str>
</option>
<option name="26">
<str>s10</str>
</option>
<option name="26">
<str>x26</str>
</option>
<option name="27">
<str>s11</str>
</option>
<option name="27">
<str>x27</str>
</option>
<option name="28">
<str>t3</str>
</option>
<option name="28">
<str>x28</str>
</option>
<option name="29">
<str>t4</str>
</option>
<option name="29">
<str>x29</str>
</option>
<option name="30">
<str>t5</str>
</option>
<option name="30">
<str>x30</str>
</option>
<option name="31">
<str>t6</str>
</option>
<option name="31">
<str>x31</str>
</option>
</enumerated>
<type>
<str>regfile</str>
</type>
<ref>
<str>GPR</str>
</ref>
</instrfield>
<instrfield name="rs1">
<doc>
<str><![CDATA[
    First source register field.
    
]]></str>
</doc>
<bits>
<range>
<int>19</int>
<int>15</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xf8000</str>
</mask>
<enumerated>
<option name="0">
<str>zero</str>
</option>
<option name="0">
<str>x0</str>
</option>
<option name="1">
<str>ra</str>
</option>
<option name="1">
<str>x1</str>
</option>
<option name="2">
<str>sp</str>
</option>
<option name="2">
<str>x2</str>
</option>
<option name="3">
<str>gp</str>
</option>
<option name="3">
<str>x3</str>
</option>
<option name="4">
<str>tp</str>
</option>
<option name="4">
<str>x4</str>
</option>
<option name="5">
<str>t0</str>
</option>
<option name="5">
<str>x5</str>
</option>
<option name="6">
<str>t1</str>
</option>
<option name="6">
<str>x6</str>
</option>
<option name="7">
<str>t2</str>
</option>
<option name="7">
<str>x7</str>
</option>
<option name="8">
<str>s0</str>
</option>
<option name="8">
<str>x8</str>
</option>
<option name="8">
<str>fp</str>
</option>
<option name="9">
<str>s1</str>
</option>
<option name="9">
<str>x9</str>
</option>
<option name="10">
<str>a0</str>
</option>
<option name="10">
<str>x10</str>
</option>
<option name="11">
<str>a1</str>
</option>
<option name="11">
<str>x11</str>
</option>
<option name="12">
<str>a2</str>
</option>
<option name="12">
<str>x12</str>
</option>
<option name="13">
<str>a3</str>
</option>
<option name="13">
<str>x13</str>
</option>
<option name="14">
<str>a4</str>
</option>
<option name="14">
<str>x14</str>
</option>
<option name="15">
<str>a5</str>
</option>
<option name="15">
<str>x15</str>
</option>
<option name="16">
<str>a6</str>
</option>
<option name="16">
<str>x16</str>
</option>
<option name="17">
<str>a7</str>
</option>
<option name="17">
<str>x17</str>
</option>
<option name="18">
<str>s2</str>
</option>
<option name="18">
<str>x18</str>
</option>
<option name="19">
<str>s3</str>
</option>
<option name="19">
<str>x19</str>
</option>
<option name="20">
<str>s4</str>
</option>
<option name="20">
<str>x20</str>
</option>
<option name="21">
<str>s5</str>
</option>
<option name="21">
<str>x21</str>
</option>
<option name="22">
<str>s6</str>
</option>
<option name="22">
<str>x22</str>
</option>
<option name="23">
<str>s7</str>
</option>
<option name="23">
<str>x23</str>
</option>
<option name="24">
<str>s8</str>
</option>
<option name="24">
<str>x24</str>
</option>
<option name="25">
<str>s9</str>
</option>
<option name="25">
<str>x25</str>
</option>
<option name="26">
<str>s10</str>
</option>
<option name="26">
<str>x26</str>
</option>
<option name="27">
<str>s11</str>
</option>
<option name="27">
<str>x27</str>
</option>
<option name="28">
<str>t3</str>
</option>
<option name="28">
<str>x28</str>
</option>
<option name="29">
<str>t4</str>
</option>
<option name="29">
<str>x29</str>
</option>
<option name="30">
<str>t5</str>
</option>
<option name="30">
<str>x30</str>
</option>
<option name="31">
<str>t6</str>
</option>
<option name="31">
<str>x31</str>
</option>
</enumerated>
<type>
<str>regfile</str>
</type>
<ref>
<str>GPR</str>
</ref>
</instrfield>
<instrfield name="rs2">
<doc>
<str><![CDATA[
    Second source register field.
    
]]></str>
</doc>
<bits>
<range>
<int>24</int>
<int>20</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x1f00000</str>
</mask>
<enumerated>
<option name="0">
<str>zero</str>
</option>
<option name="0">
<str>x0</str>
</option>
<option name="1">
<str>ra</str>
</option>
<option name="1">
<str>x1</str>
</option>
<option name="2">
<str>sp</str>
</option>
<option name="2">
<str>x2</str>
</option>
<option name="3">
<str>gp</str>
</option>
<option name="3">
<str>x3</str>
</option>
<option name="4">
<str>tp</str>
</option>
<option name="4">
<str>x4</str>
</option>
<option name="5">
<str>t0</str>
</option>
<option name="5">
<str>x5</str>
</option>
<option name="6">
<str>t1</str>
</option>
<option name="6">
<str>x6</str>
</option>
<option name="7">
<str>t2</str>
</option>
<option name="7">
<str>x7</str>
</option>
<option name="8">
<str>s0</str>
</option>
<option name="8">
<str>x8</str>
</option>
<option name="8">
<str>fp</str>
</option>
<option name="9">
<str>s1</str>
</option>
<option name="9">
<str>x9</str>
</option>
<option name="10">
<str>a0</str>
</option>
<option name="10">
<str>x10</str>
</option>
<option name="11">
<str>a1</str>
</option>
<option name="11">
<str>x11</str>
</option>
<option name="12">
<str>a2</str>
</option>
<option name="12">
<str>x12</str>
</option>
<option name="13">
<str>a3</str>
</option>
<option name="13">
<str>x13</str>
</option>
<option name="14">
<str>a4</str>
</option>
<option name="14">
<str>x14</str>
</option>
<option name="15">
<str>a5</str>
</option>
<option name="15">
<str>x15</str>
</option>
<option name="16">
<str>a6</str>
</option>
<option name="16">
<str>x16</str>
</option>
<option name="17">
<str>a7</str>
</option>
<option name="17">
<str>x17</str>
</option>
<option name="18">
<str>s2</str>
</option>
<option name="18">
<str>x18</str>
</option>
<option name="19">
<str>s3</str>
</option>
<option name="19">
<str>x19</str>
</option>
<option name="20">
<str>s4</str>
</option>
<option name="20">
<str>x20</str>
</option>
<option name="21">
<str>s5</str>
</option>
<option name="21">
<str>x21</str>
</option>
<option name="22">
<str>s6</str>
</option>
<option name="22">
<str>x22</str>
</option>
<option name="23">
<str>s7</str>
</option>
<option name="23">
<str>x23</str>
</option>
<option name="24">
<str>s8</str>
</option>
<option name="24">
<str>x24</str>
</option>
<option name="25">
<str>s9</str>
</option>
<option name="25">
<str>x25</str>
</option>
<option name="26">
<str>s10</str>
</option>
<option name="26">
<str>x26</str>
</option>
<option name="27">
<str>s11</str>
</option>
<option name="27">
<str>x27</str>
</option>
<option name="28">
<str>t3</str>
</option>
<option name="28">
<str>x28</str>
</option>
<option name="29">
<str>t4</str>
</option>
<option name="29">
<str>x29</str>
</option>
<option name="30">
<str>t5</str>
</option>
<option name="30">
<str>x30</str>
</option>
<option name="31">
<str>t6</str>
</option>
<option name="31">
<str>x31</str>
</option>
</enumerated>
<type>
<str>regfile</str>
</type>
<ref>
<str>GPR</str>
</ref>
</instrfield>
<instrfield name="rt">
<doc>
<str><![CDATA[
    Temporary register used by assembly macros for storing an address.
    
]]></str>
</doc>
<pseudo>
<true />
</pseudo>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x0</str>
</mask>
<enumerated>
<option name="0">
<str>zero</str>
</option>
<option name="0">
<str>x0</str>
</option>
<option name="1">
<str>ra</str>
</option>
<option name="1">
<str>x1</str>
</option>
<option name="2">
<str>sp</str>
</option>
<option name="2">
<str>x2</str>
</option>
<option name="3">
<str>gp</str>
</option>
<option name="3">
<str>x3</str>
</option>
<option name="4">
<str>tp</str>
</option>
<option name="4">
<str>x4</str>
</option>
<option name="5">
<str>t0</str>
</option>
<option name="5">
<str>x5</str>
</option>
<option name="6">
<str>t1</str>
</option>
<option name="6">
<str>x6</str>
</option>
<option name="7">
<str>t2</str>
</option>
<option name="7">
<str>x7</str>
</option>
<option name="8">
<str>s0</str>
</option>
<option name="8">
<str>x8</str>
</option>
<option name="8">
<str>fp</str>
</option>
<option name="9">
<str>s1</str>
</option>
<option name="9">
<str>x9</str>
</option>
<option name="10">
<str>a0</str>
</option>
<option name="10">
<str>x10</str>
</option>
<option name="11">
<str>a1</str>
</option>
<option name="11">
<str>x11</str>
</option>
<option name="12">
<str>a2</str>
</option>
<option name="12">
<str>x12</str>
</option>
<option name="13">
<str>a3</str>
</option>
<option name="13">
<str>x13</str>
</option>
<option name="14">
<str>a4</str>
</option>
<option name="14">
<str>x14</str>
</option>
<option name="15">
<str>a5</str>
</option>
<option name="15">
<str>x15</str>
</option>
<option name="16">
<str>a6</str>
</option>
<option name="16">
<str>x16</str>
</option>
<option name="17">
<str>a7</str>
</option>
<option name="17">
<str>x17</str>
</option>
<option name="18">
<str>s2</str>
</option>
<option name="18">
<str>x18</str>
</option>
<option name="19">
<str>s3</str>
</option>
<option name="19">
<str>x19</str>
</option>
<option name="20">
<str>s4</str>
</option>
<option name="20">
<str>x20</str>
</option>
<option name="21">
<str>s5</str>
</option>
<option name="21">
<str>x21</str>
</option>
<option name="22">
<str>s6</str>
</option>
<option name="22">
<str>x22</str>
</option>
<option name="23">
<str>s7</str>
</option>
<option name="23">
<str>x23</str>
</option>
<option name="24">
<str>s8</str>
</option>
<option name="24">
<str>x24</str>
</option>
<option name="25">
<str>s9</str>
</option>
<option name="25">
<str>x25</str>
</option>
<option name="26">
<str>s10</str>
</option>
<option name="26">
<str>x26</str>
</option>
<option name="27">
<str>s11</str>
</option>
<option name="27">
<str>x27</str>
</option>
<option name="28">
<str>t3</str>
</option>
<option name="28">
<str>x28</str>
</option>
<option name="29">
<str>t4</str>
</option>
<option name="29">
<str>x29</str>
</option>
<option name="30">
<str>t5</str>
</option>
<option name="30">
<str>x30</str>
</option>
<option name="31">
<str>t6</str>
</option>
<option name="31">
<str>x31</str>
</option>
</enumerated>
<type>
<str>regfile</str>
</type>
<ref>
<str>GPR</str>
</ref>
</instrfield>
<instrfield name="shamt">
<doc>
<str><![CDATA[
    5-bit immediate shift amount used for shift operations.
    
]]></str>
</doc>
<bits>
<range>
<int>24</int>
<int>20</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x1f00000</str>
</mask>
<display>
<str>dec</str>
</display>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="zimm">
<doc>
<str><![CDATA[
    5-bit zero-extended immediate field used for writing/setting/clearing CSR values.
    
]]></str>
</doc>
<bits>
<range>
<int>19</int>
<int>15</int>
</range>
</bits>
<width>
<int>5</int>
</width>
<size>
<int>5</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xf8000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
</instrfields>
<instrs>
<instruction name="add">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Add operation.
    
]]></str>
</doc>
<syntax>
<str>add rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>add ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>0</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>0</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) + GPR ( rs2 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
<intrinsic>
<str>int_riscv_add</str>
</intrinsic>
<intrinsic_args>
<str>GPR(rd)</str>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</intrinsic_args>
<intrinsic_type>
<instrfield_intrinsic name="GPR(rd)">
<str>llvm_i32_ty</str>
</instrfield_intrinsic>
<instrfield_intrinsic name="GPR(rs1)">
<str>llvm_i32_ty</str>
</instrfield_intrinsic>
<instrfield_intrinsic name="GPR(rs2)">
<str>llvm_i32_ty</str>
</instrfield_intrinsic>
</intrinsic_type>
<generate_builtin>
<str>__rv_add</str>
</generate_builtin>
</instruction>
<instruction name="addi">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Add-immediate operation.
    
]]></str>
</doc>
<syntax>
<str>addi rd,rs1,imm_i</str>
</syntax>
<dsyntax>
<str>addi ${rd},${rs1},${imm_i}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_i">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>0</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) + imm_i ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="and">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise and operation.
    
]]></str>
</doc>
<syntax>
<str>and rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>and ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>0</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>7</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) & GPR ( rs2 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="andi">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise and-immediate operation.
    
]]></str>
</doc>
<syntax>
<str>andi rd,rs1,imm_i</str>
</syntax>
<dsyntax>
<str>andi ${rd},${rs1},${imm_i}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_i">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>7</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) & imm_i ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="auipc">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Add upper immediate to pc.
    
]]></str>
</doc>
<syntax>
<str>auipc rd,imm_u_pc</str>
</syntax>
<dsyntax>
<str>auipc ${rd},${imm_u_pc}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_u_pc">
<str></str>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>23</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = signExtend ( concat ( imm_u_pc , zero ( 12 ) ) , 32 ) + PC ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>PC</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="lui">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Load unsigned immediate.
    
]]></str>
</doc>
<syntax>
<str>lui rd,imm_u</str>
</syntax>
<dsyntax>
<str>lui ${rd},${imm_u}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_u">
<str></str>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>55</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = signExtend ( concat ( imm_u , zero ( 12 ) ) , 32 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="neg">
<width>
<int>32</int>
</width>
<syntax>
<str>neg rd,rs1</str>
</syntax>
<dsyntax>
<str>neg ${rd},${rs1}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<aliases>
<alias name="sub">
<sources>
<source>
<field>
<str>rs2</str>
</field>
<value>
<str>rs1</str>
</value>
</source>
</sources>
<destinations>
<destination>
<field>
<str>rd</str>
</field>
<value>
<str>rd</str>
</value>
</destination>
</destinations>
<miscs>
<misc>
<field>
<str>rs1</str>
</field>
<value>
<int>0</int>
</value>
</misc>
</miscs>
<parent_action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( 0 ) - GPR ( rs1 ) ;
}
]]></str>
</parent_action>
</alias>
</aliases>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(0)</str>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="nop">
<width>
<int>32</int>
</width>
<syntax>
<str>nop</str>
</syntax>
<dsyntax>
<str>nop</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<aliases>
<alias name="addi">
<sources>
</sources>
<destinations>
</destinations>
<miscs>
<misc>
<field>
<str>imm_i</str>
</field>
<value>
<int>0</int>
</value>
</misc>
<misc>
<field>
<str>rs1</str>
</field>
<value>
<int>0</int>
</value>
</misc>
<misc>
<field>
<str>rd</str>
</field>
<value>
<int>0</int>
</value>
</misc>
</miscs>
<parent_action>
<str><![CDATA[
{
    GPR ( 0 ) = GPR ( 0 ) + 0 ;
}
]]></str>
</parent_action>
</alias>
</aliases>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(0)</str>
</inputs>
<outputs>
<str>GPR(0)</str>
</outputs>
</instruction>
<instruction name="not">
<width>
<int>32</int>
</width>
<syntax>
<str>not rd,rs1</str>
</syntax>
<dsyntax>
<str>not ${rd},${rs1}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<aliases>
<alias name="xori">
<sources>
<source>
<field>
<str>rs1</str>
</field>
<value>
<str>rs1</str>
</value>
</source>
</sources>
<destinations>
<destination>
<field>
<str>rd</str>
</field>
<value>
<str>rd</str>
</value>
</destination>
</destinations>
<miscs>
<misc>
<field>
<str>imm_i</str>
</field>
<value>
<int>-1</int>
</value>
</misc>
</miscs>
<parent_action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) ^ -1 ;
}
]]></str>
</parent_action>
</alias>
</aliases>
<disassemble>
<str>true</str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="or">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise or operation.
    
]]></str>
</doc>
<syntax>
<str>or rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>or ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>0</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>6</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) | GPR ( rs2 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="ori">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise or-immediate operation.
    
]]></str>
</doc>
<syntax>
<str>ori rd,rs1,imm_i</str>
</syntax>
<dsyntax>
<str>ori ${rd},${rs1},${imm_i}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_i">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>6</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) | imm_i ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="seqz">
<width>
<int>32</int>
</width>
<syntax>
<str>seqz rd,rs1</str>
</syntax>
<dsyntax>
<str>seqz ${rd},${rs1}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<aliases>
<alias name="sltiu">
<sources>
<source>
<field>
<str>rs1</str>
</field>
<value>
<str>rs1</str>
</value>
</source>
</sources>
<destinations>
<destination>
<field>
<str>rd</str>
</field>
<value>
<str>rd</str>
</value>
</destination>
</destinations>
<miscs>
<misc>
<field>
<str>imm_i</str>
</field>
<value>
<int>1</int>
</value>
</misc>
</miscs>
<parent_action>
<str><![CDATA[
{
     var x = GPR ( rs1 ) ;
    if ( x < 1 ) {
        GPR ( rd ) = 1 ;
    } else {
        GPR ( rd ) = 0 ;
    }
}
]]></str>
</parent_action>
</alias>
</aliases>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="sgtu">
<width>
<int>32</int>
</width>
<syntax>
<str>sgtu rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>sgtu ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<aliases>
<alias name="sltu">
<sources>
<source>
<field>
<str>rs2</str>
</field>
<value>
<str>rs1</str>
</value>
</source>
<source>
<field>
<str>rs1</str>
</field>
<value>
<str>rs2</str>
</value>
</source>
</sources>
<destinations>
<destination>
<field>
<str>rd</str>
</field>
<value>
<str>rd</str>
</value>
</destination>
</destinations>
<parent_action>
<str><![CDATA[
{
    if ( GPR ( rs2 ) < GPR ( rs1 ) ) {
        GPR ( rd ) = 1 ;
    } else {
        GPR ( rd ) = 0 ;
    }
}
]]></str>
</parent_action>
</alias>
</aliases>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="sll">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise or operation.
    
]]></str>
</doc>
<syntax>
<str>sll rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>sll ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>0</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>1</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) << GPR ( rs2 ) ( 4 , 0 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)[mask 0x0000001f]/p</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="slli">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Shift-left logical operation.
    
]]></str>
</doc>
<syntax>
<str>slli rd,rs1,shamt</str>
</syntax>
<dsyntax>
<str>slli ${rd},${rs1},${shamt}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7_shift">
<int>0</int>
</field>
<field name="shamt">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>1</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) << shamt ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="slti">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Signed less-than operation.
    
]]></str>
</doc>
<syntax>
<str>slti rd,rs1,imm_i</str>
</syntax>
<dsyntax>
<str>slti ${rd},${rs1},${imm_i}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_i">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>2</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
     var x = GPR ( rs1 ) ;
    if ( x . signedLT ( imm_i ) ) {
        GPR ( rd ) = 1 ;
    } else {
        GPR ( rd ) = 0 ;
    }
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="sltiu">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Unsigned less-than operation.
    
]]></str>
</doc>
<syntax>
<str>sltiu rd,rs1,imm_i</str>
</syntax>
<dsyntax>
<str>sltiu ${rd},${rs1},${imm_i}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_i">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>3</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
     var x = GPR ( rs1 ) ;
    if ( x < imm_i ) {
        GPR ( rd ) = 1 ;
    } else {
        GPR ( rd ) = 0 ;
    }
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="sltu">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Unsigned less-than compare operation.
    
]]></str>
</doc>
<syntax>
<str>sltu rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>sltu ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>0</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>3</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    if ( GPR ( rs1 ) < GPR ( rs2 ) ) {
        GPR ( rd ) = 1 ;
    } else {
        GPR ( rd ) = 0 ;
    }
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="sra">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise or operation.
    
]]></str>
</doc>
<syntax>
<str>sra rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>sra ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>32</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>5</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) . signedRightShift ( GPR ( rs2 ) ( 4 , 0 ) ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)[mask 0x0000001f]/p</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="srl">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise or operation.
    
]]></str>
</doc>
<syntax>
<str>srl rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>srl ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>0</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>5</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) >> GPR ( rs2 ) ( 4 , 0 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)[mask 0x0000001f]/p</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="srli">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Shift-right logical operation.
    
]]></str>
</doc>
<syntax>
<str>srli rd,rs1,shamt</str>
</syntax>
<dsyntax>
<str>srli ${rd},${rs1},${shamt}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7_shift">
<int>0</int>
</field>
<field name="shamt">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>5</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) >> shamt ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="sub">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Subtraction operation.
    
]]></str>
</doc>
<syntax>
<str>sub rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>sub ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>32</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>0</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) - GPR ( rs2 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="xor">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise or operation.
    
]]></str>
</doc>
<syntax>
<str>xor rd,rs1,rs2</str>
</syntax>
<dsyntax>
<str>xor ${rd},${rs1},${rs2}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="funct7">
<int>0</int>
</field>
<field name="rs2">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>4</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>51</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) ^ GPR ( rs2 ) ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
<str>GPR(rs2)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
<instruction name="xori">
<width>
<int>32</int>
</width>
<doc>
<str><![CDATA[
    Bitwise xor-immediate operation.
    
]]></str>
</doc>
<syntax>
<str>xori rd,rs1,imm_i</str>
</syntax>
<dsyntax>
<str>xori ${rd},${rs1},${imm_i}</str>
</dsyntax>
<attributes>
<attribute name="rv32i">
<str></str>
</attribute>
</attributes>
<fields>
<field name="imm_i">
<str></str>
</field>
<field name="rs1">
<str></str>
</field>
<field name="funct3">
<int>4</int>
</field>
<field name="rd">
<str></str>
</field>
<field name="opcode">
<int>19</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    GPR ( rd ) = GPR ( rs1 ) ^ imm_i ;
}
]]></str>
</action>
<disassemble>
<str>true </str>
</disassemble>
<inputs>
<str>GPR(rs1)</str>
</inputs>
<outputs>
<str>GPR(rd)</str>
</outputs>
</instruction>
</instrs>
<asm_config>
<comments>
<str>#</str>
</comments>
<line_comments>
<str>#</str>
</line_comments>
<arch>
<str>riscv32</str>
</arch>
<attributes>
<str>rv32i2p1</str>
</attributes>
<mattrib>
<str></str>
</mattrib>
</asm_config>
<helpers>
</helpers>
</core>
</cores>
<systems>
</systems>
</data>
