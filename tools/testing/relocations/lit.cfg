# -*- Python -*-

# Configuration file for the 'lit' test runner.

import os
import sys
import re
import platform
import glob
import subprocess

import lit.util
import lit.formats

# name: The name of this test suite.
config.name = 'TESTS'


# Choose between lit's internal shell pipeline runner and a real shell.  If
# LIT_USE_INTERNAL_SHELL is in the environment, we use that as an override.
use_lit_shell = os.environ.get("LIT_USE_INTERNAL_SHELL")
if use_lit_shell:
    # 0 is external, "" is default, and everything else is internal.
    execute_external = (use_lit_shell == "0")
else:
    # Otherwise we default to internal on Windows and external elsewhere, as
    # bash on Windows is usually very slow.
    execute_external = (not sys.platform in ['win32'])

# testFormat: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(execute_external)

# suffixes: A list of file extensions to treat as test files. This is overriden
# by individual lit.local.cfg files in the test subdirectories.
config.suffixes = ['.s']

# excludes: A list of directories to exclude from the testsuite. The 'Inputs'
# subdirectories contain auxiliary inputs for various tests in their parent
# directories.
config.excludes = ['Inputs', 'CMakeLists.txt', 'README.txt', 'LICENSE.txt']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)

# test_exec_root: The root path where tests should be run.
config.test_exec_root = os.path.dirname(__file__)


###

asm=lit_config.params.get('app_asm')
config.substitutions.append( ('%asm',asm))

readelf=lit_config.params.get('app_readelf')
config.substitutions.append( ('%readelf',readelf))

filecheck=lit_config.params.get('app_filecheck')
config.substitutions.append( ('%filecheck',filecheck))

